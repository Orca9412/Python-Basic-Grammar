"""
	데이터를 관리할 때, 많은 양의 데이터를 담아야 한다면 어떻게 처리해야 할까?
	ex) 학생 성적을 처리
"""
# 변수가 많을 때는, 리스트(List)를 이용한다.
# 리스트: 비슷한 성질을 가진 객체의 나열
# 인덱스: 순서. 배열의 인덱스는 0부터 시작한다.

# 인덱스: 0    1    2    3    4    5
#     값:3.5  4.3  2.3  3.8  3.2  4.5
# 파이썬의 리스트는 자체적으로 다양한 함수를 지원하기 때문에 연속적인 데이터를 손쉽게 관리할 수 있다.
a = [3.5, 4.3, 2.3, 3.8, 3.2, 4.5]
print(a)  # [3.5, 4.3, 2.3, 3.8, 3.2, 4.5]

# 장점: 많은 양의 데이터를 효과적으로 처리
# 인덱스를 사용해서 개별적으로 값에 접근 가능
print("인덱스 0 = ", a[0])  # 3.5
a[0] = 0.9
print("인덱스 0 = ", a[0])  # 0.9 <- 리스트 원소값이 바뀌었다.

print("인덱스 1 = ", a[1])
print("인덱스 2 = ", a[2])
print("인덱스 3 = ", a[3])


# 리스트는 반복문에서 자주 사용된다.
sum = 0
for i in a:
	sum += i


print("평균 점수: ", sum / len(a))  # 평균 점수:  3.1666666666666665


# 학생들에 대한 정보를 수학 성적과 영어 성적으로 나눠서 관리
# 차원 배열 (리스트 안에 리스트, 2차원 리스트)를 사용한다.
a = [
	[90, 95, 83, 40, 30, 20, 19, 48, 39, 59],
	[48, 53, 64, 76, 58, 34, 55, 85, 96, 85]
]
sum = 0
english = a[0]  # english 변수는 영어 성적이 담겨있는 리스트[]를 가리키게 된다.
for i in english:
	sum += i


print("영어 평균 점수: ", sum / len(english))  # 영어 평균 점수:  52.3
sum = 0
math = a[1]  # math 변수는 수학 성적이 담겨있는 리스트[]를 가리키게 된다.
for i in math:
	sum += i

print("수학 평균 점수: ", sum / len(math))  # 수학 평균 점수:  65.4

